// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String   @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
  reviews   Review[]
}
enum Type {
  localRoaster
  packagedBean
}

model CoffeeBean {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String
  origin        String
  roastLevel    String
  type          Type
  localRoaster  LocalRoaster?  @relation(fields: [localRoasterId], references: [id])
  localRoasterId String? @db.ObjectId
  packagedBean  PackagedBean?  @relation(fields: [packagedBeanId], references: [id])
  packagedBeanId String? @db.ObjectId
  reviews       Review[]
}

model LocalRoaster {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  address     String
  coffeeBeans CoffeeBean[] 
   }

model PackagedBean {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  brand      String
  store      Store      @relation(fields: [storeId], references: [id])
  storeId    String     @db.ObjectId
  coffeeBeans CoffeeBean[]
}

model Store {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  address       String
  packagedBeans PackagedBean[] 
}

model Review {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  rating        Int
  comment       String
  coffeeMachine String?
  grinder       String?
  user          User       @relation(fields: [userId], references: [id])
  userId        String     @db.ObjectId
  coffeeBean    CoffeeBean @relation(fields: [coffeeBeanId], references: [id])
  coffeeBeanId  String     @db.ObjectId
  createdAt     DateTime   @default(now())
}
